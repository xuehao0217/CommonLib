import buildsrc.*
//apply from: '../module_common_config.gradle'
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
}
android {
    compileSdkVersion ProjectBuildConfig.compileSdkVersion
    defaultConfig {
        applicationId ProjectBuildConfig.applicationId
        minSdkVersion ProjectBuildConfig.minSdkVersion
        targetSdkVersion ProjectBuildConfig.targetSdkVersion
        versionCode ProjectBuildConfig.versionCode
        versionName ProjectBuildConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    viewBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8

        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }

    buildFeatures {
        compose true
        viewBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion Deps.Version.compose_compiler.toString()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }


    // 自定义打包apk的文件名
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                outputFileName = "${ProjectBuildConfig.appName}" +
                        "_${ProjectBuildConfig.versionCode}" +
                        "_v${ProjectBuildConfig.versionName}" +
                        "_${variant.buildType.name}" +
                        "_" + getDate() +
                        ".apk"
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation project(path: ':common_core')
    debugImplementation "com.github.chuckerteam.chucker:library:3.5.2"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.5.2"
}


def static getDate() {
    def date = new Date()
    return date.format('yyyy-MM-dd-HH:mm')
}